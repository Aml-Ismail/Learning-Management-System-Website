@page
@model LMS.Pages.Student.coursehomeModel
@{
    Layout = "studentlayout.cshtml";
}
<style>
    body {
        background-color: #f0f8ff;
        font-family: Arial, sans-serif;
    }

    /* Add this new class */
    .modal-link {
        color: #000000;
        text-decoration: none;
        font-family: Arial, sans-serif;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 800px;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    .text-center {
        text-align: center;
    }

    .table {
        margin: 0 auto;
        width: 80%;
        max-width: 800px;
        background-color: #fff;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

        .table th {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

        .table td {
            padding: 10px;
        }

    .btn {
        background-color: #6495ed;
        color: #fff;
        border: none;
        padding: 8px 16px;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-primary {
        background-color: #87ceeb;
    }

        .btn-primary:hover {
            background-color: #6495ed;
        }

    .form-control {
        width: 100%;
        padding: 8px;
        border-radius: 4px;
        border: 1px solid #ccc;
        box-sizing: border-box;
    }

    textarea.form-control {
        resize: vertical;
    }
</style>

<div class="text-center">
    <h1>@Model.coursename</h1>
    <table class="table table-borderless">
        <tr>
            <th>Material</th>
            <th> Link</th>
        </tr>
        
            @for (int i = 0; i < Model._material.Rows.Count; i++)
            {
            <tr>
                @for (int j = 0; j < 2; j++)
                {
                    <td>@Model._material.Rows[i][j]</td>
                }
            </tr>
            }
        

    </table>
    <br>
    <table class="table table-borderless">
        <tr>
            <th colspan="2">Anouncements</th>
            
        </tr>
        
            @for (int i = 0; i < Model._anouncements.Rows.Count; i++)
            {
            <tr>
                @for (int j = 0; j < 2; j++)
                {
                    <td>@Model._anouncements.Rows[i][j]</td>
                }
            </tr>

            }
            

    </table>
    <br>

    <table class="table table-borderless">
        <tr>
            <th>Assignmnet Name</th>
            <th> due date</th>
            <th> Submission</th>
        </tr>

        @for (int i = 0; i < Model.unsubmitted.Rows.Count; i++)
        {
            <tr>
                <td>@Model.unsubmitted.Rows[i][0]</td>
                <td>@Model.unsubmitted.Rows[i][1]</td>
                <td>
                    <div class="button-group">
                        <button class="btn"><a id="submit-link">Submit</a></button>
                    </div>
                    
                    
                </td>
            </tr>
        }
        @for (int i = 0; i < Model.submitted.Rows.Count; i++)
        {
            <tr>
                <td>@Model.submitted.Rows[i][0]</td>
                <td>@Model.submitted.Rows[i][1]</td>
                
                    @if (string.IsNullOrEmpty(Model.submitted.Rows[i][2].ToString()))
                    {
                    <td>submitted</td>
                }
                else
                {
                    <td>@Model.submitted.Rows[i][2]</td>
                }


                
            </tr>
        }
    </table>

    <br>
    <div class="button-group">
        <button class="btn"><a id="feedback-link"> Give feedback </a></button>
    </div>
@*    for loop *@
@for(int i=0;i<Model.unsubmitted.Rows.Count;i++){
        <div id="submit-modal" class="modal">
            <div class="modal-content">
            <span class="close">&times;</span>
            <h3>Submit @Model.unsubmitted.Rows[i][0]</h3>
            <form method="post" asp-page-handler="SubmitAssignment">
                <input type="hidden" name="aName" value="@Model.unsubmitted.Rows[i][0]" />
                <label for="assignmentLink">Link:</label>
                <input type="text" id="assignmentLink" name="assignmentLink" required />
                <button type="submit">Submit</button>
            </form>
        </div>
    </div>
    }
   

    <div id="feedback-modal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Give Feedback</h2>
            <form method="post" asp-page-handler="Feedback">
                <div class="form-group">
                    <label for="description">Feedback:</label>
                    <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
    </div>

    <script>
        const modals = document.querySelectorAll('.modal');
        const links = document.querySelectorAll('.button-group .btn a');


        links.forEach((link, index) => {
            link.addEventListener('click', (event) => {
                event.preventDefault();
                modals[index].style.display = 'block';
            });
        });

        modals.forEach((modal, index) => {
            const closeButton = modal.querySelector('.close');
            closeButton.addEventListener('click', () => {
                modal.style.display = 'none';
            });
        });


        window.addEventListener('click', (event) => {
            modals.forEach((modal) => {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });
        });
    </script>
